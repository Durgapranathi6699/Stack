class BinaryTree
{
    //Function to return a list containing the preorder traversal of the tree.
    static ArrayList<Integer> preorder(Node root)
    {
       ArrayList<Integer> l=new ArrayList<Integer>();
//         if(root==null)return l;
//         helper(root,l);
//          return l;
//   }
//     static void helper(Node root,ArrayList<Integer> l){
//         if(root==null)return;
//         l.add(root.data);
//         helper(root.left,l);
//         helper(root.right,l);

    //root left right
    Stack<Node> s=new Stack<>();
    while(true){
       while(root!=null){//after all visiting left subtree
        l.add(root.data);
        s.push(root);
          root=root.left;
         }
        if(s.empty())break;//when stack becomes empty stop
       root=s.pop();
       root=root.right;
    }
    return l;
}
}
