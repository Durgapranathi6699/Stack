class Solution{
    //Function to find the leaders in the array.
    static ArrayList<Integer> leaders(int arr[], int n){
        // Your code here
        ArrayList<Integer> l=new ArrayList<Integer>();
          
        // for(int i=0;i<n;i++){
        //   // boolean ladder=true;
        //   int j;
        //     for(j=i+1;j<n;j++){
        //         if(arr[i]<arr[j]){
        //           // ladder=false;
        //           break;
        //         }
        //     }
        //     if(j==n){
        //         l.add(arr[i]);
        //     }
        //     // if(ladder==true){
        //     //     l.add(arr[i]);
        //     // }
        // }
        // return l;
        long max=Integer.MIN_VALUE;
        for(int i=n-1;i>=0;i--){
            if(arr[i]>=max){
            max=arr[i];
             l.add((int)arr[i]);
            }
        }
        Collections.reverse(l);
        return l;
        // Stack<Integer> s=new Stack<>();
        // s.push(arr[n-1]);
        // for(int i=n-2;i>=0;i--){
        //     if(arr[i]>s.peek()){
        //         s.push(arr[i]);
        //     }
        // }
        // while(!s.empty()){
        //     l.add(s.pop());
        // }
        // return l;
    }
}
